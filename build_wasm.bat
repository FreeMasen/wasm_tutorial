@echo off
if "%CARGOHOME%"=="" (
    echo "CARGOHOME not set, setting to the default"
    set CARGOHOME=%USERPROFILE%\.cargo
)
echo "Cargo home is %CARGOHOME%"
if not exist %CARGOHOME%\bin\cargo-upstall.exe (
    echo "Did not find cargo-upstall... installing"
    cargo install cargo-upstall
)
echo "Updating wasm-bindgen-cli"
cargo upstall wasm-bindgen-cli
echo "Updating rsass"
cargo upstall rsass --features commandline
echo "Updating wbch"
if not exist %CARGOHOME%\bin\wbch.exe (
    cargo upstall --git https://github.com/freemasen/wasm-chrome-hack
)
echo "Installing the nightly toolchain"
rustup install nightly
echo "Installing the wasm32-unknown-unknown target"
rustup target add --toolchain nightly wasm32-unknown-unknown
echo cleaning up any existing .wasm files in the dist folder
del %~dp0dist\*.wasm
echo "Building the browser project"
cd ./crates/browser
cargo +nightly build --target wasm32-unknown-unknown
cd ../..
echo running wasm-bindgen against our project
wasm-bindgen ./target\wasm32-unknown-unknown\debug\wasm_tutorial_browser.wasm --browser --out-dir ./dist
echo renaming the .wasm file generated by wasm-bindgen
rename %~dp0dist\wasm_tutorial_browser_bg.wasm bincode_parse.wasm
echo running the chrome hack exe
wbch.exe ./dist/wasm_tutorial_browser.js ./ts/wasm_tutorial_browser.js /bincode_parse.wasm
echo deleting the wasm-bindgen generated .js file
del /F /Q %~dp0dist\*.js
echo running webpack
%~dp0node_modules\.bin\webpack.cmd %1